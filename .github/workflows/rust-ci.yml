on: [push, pull_request]

name: Continuous integration

jobs:
  check:
    name: Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable, nightly]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.4
      - name: Install PyTorch (Linux)
        if: runner.os == 'Linux'
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
      - name: Install PyTorch (macOS)
        if: runner.os == 'macOS'
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install torch torchvision --break-system-packages
      - name: Install PyTorch (Windows)
        if: runner.os == 'Windows'
        run: |
          python -m pip install --upgrade pip
          python -m pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
      - name: Check
        run: cargo check --features "download-libtorch,torch-rs"

  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        rust: [stable, nightly]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.4
      - name: Install PyTorch (Linux)
        if: runner.os == 'Linux'
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
      - name: Install PyTorch (macOS)
        if: runner.os == 'macOS'
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install torch torchvision --break-system-packages
      - name: Run tests
        run: cargo test --features "download-libtorch,torch-rs"

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Install PyTorch
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
      - name: Run Clippy
        run: cargo clippy --examples --tests --features "download-libtorch,torch-rs" --all -- -D warnings
